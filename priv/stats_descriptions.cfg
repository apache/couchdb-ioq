{[couchdb, io_queue, latency], [
    {type, histogram},
    {desc, <<"delay introduced by routing request through IO queue">>}
]}.
{[couchdb, io_queue, low], [
    {type, counter},
    {desc, <<"number of requests routed through IO at low priority">>}
]}.
{[couchdb, io_queue, merged], [
    {type, counter},
    {desc, <<"number of requests routed through IO queue that were merged">>}
]}.
{[couchdb, io_queue, osproc], [
    {type, counter},
    {desc, <<"number of requests routed through IO os queue">>}
]}.
{[couchdb, io_queue, reads], [
    {type, counter},
    {desc, <<"number of read requests routed through IO queue">>}
]}.
{[couchdb, io_queue, writes], [
    {type, counter},
    {desc, <<"number of write requests routed through IO queue">>}
]}.
{[couchdb, io_queue, undefined], [
    {type, counter},
    {desc, <<"number of requests routed through IO queue without I/O class">>}
]}.
{[couchdb, io_queue, unknown], [
    {type, counter},
    {desc, <<"number of unknown requests routed through IO queue">>}
]}.
{[couchdb, io_queue, db_update], [
    {type, counter},
    {desc, <<"DB update requests routed through IO queue">>}
]}.
{[couchdb, io_queue, db_compact], [
    {type, counter},
    {desc, <<"DB compaction requests routed through IO queue">>}
]}.
{[couchdb, io_queue, view_compact], [
    {type, counter},
    {desc, <<"view compaction requests routed through IO queue">>}
]}.
{[couchdb, io_queue, view_update], [
    {type, counter},
    {desc, <<"view indexing requests routed through IO queue">>}
]}.
{[couchdb, io_queue, interactive], [
    {type, counter},
    {desc, <<"IO directly triggered by client requests">>}
]}.
{[couchdb, io_queue, internal_repl], [
    {type, counter},
    {desc, <<"IO related to internal replication">>}
]}.
{[couchdb, io_queue, search], [
    {type, counter},
    {desc, <<"number of search requests">>}
]}.
{[couchdb, io_queue, other], [
    {type, counter},
    {desc, <<"IO related to internal replication">>}
]}.
{[couchdb, io_queue_bypassed, low], [
    {type, counter},
    {desc, <<"number of requests that bypassed IO at low priority">>}
]}.
{[couchdb, io_queue_bypassed, merged], [
    {type, counter},
    {desc, <<"number of requests that bypassed IO queue that were merged">>}
]}.
{[couchdb, io_queue_bypassed, osproc], [
    {type, counter},
    {desc, <<"number of requests that bypassed IO os queue">>}
]}.
{[couchdb, io_queue_bypassed, reads], [
    {type, counter},
    {desc, <<"number of read requests that bypassed IO queue">>}
]}.
{[couchdb, io_queue_bypassed, writes], [
    {type, counter},
    {desc, <<"number of write requests that bypassed IO queue">>}
]}.
{[couchdb, io_queue_bypassed, undefined], [
    {type, counter},
    {desc, <<"number of requests that bypassed IO queue without I/O class">>}
]}.
{[couchdb, io_queue_bypassed, unknown], [
    {type, counter},
    {desc, <<"number of unknown requests that bypassed IO queue">>}
]}.
{[couchdb, io_queue_bypassed, db_update], [
    {type, counter},
    {desc, <<"DB update requests that bypassed IO queue">>}
]}.
{[couchdb, io_queue_bypassed, db_compact], [
    {type, counter},
    {desc, <<"DB compaction requests that bypassed IO queue">>}
]}.
{[couchdb, io_queue_bypassed, view_compact], [
    {type, counter},
    {desc, <<"view compaction requests that bypassed IO queue">>}
]}.
{[couchdb, io_queue_bypassed, view_update], [
    {type, counter},
    {desc, <<"view indexing requests that bypassed IO queue">>}
]}.
{[couchdb, io_queue_bypassed, interactive], [
    {type, counter},
    {desc, <<"bypassed IO directly triggered by client requests">>}
]}.
{[couchdb, io_queue_bypassed, internal_repl], [
    {type, counter},
    {desc, <<"bypassed IO related to internal replication">>}
]}.
{[couchdb, io_queue_bypassed, other], [
    {type, counter},
    {desc, <<"bypassed IO related to internal replication">>}
]}.


{[couchdb, io_queue2, io_errors], [
    {type, counter},
    {desc, <<"number of IO errors">>}
]}.
{[couchdb, io_queue2, merged], [
    {type, counter},
    {desc, <<"number of requests routed through IO queue that were merged">>}
]}.

{[couchdb, io_queue2, submit_delay], [
    {type, histogram},
    {desc, <<"delay introduced by routing request through IO queue">>}
]}.
{[couchdb, io_queue2, svctm], [
    {type, histogram},
    {desc, <<"time taken to service the IO request">>}
]}.
{[couchdb, io_queue2, iowait], [
    {type, histogram},
    {desc, <<"Total time request spent waiting on IO">>}
]}.

{[couchdb, io_queue2, low, count], [
    {type, counter},
    {desc, <<"number of requests routed through IO at low priority">>}
]}.
{[couchdb, io_queue2, osproc, count], [
    {type, counter},
    {desc, <<"number of requests routed through IO os queue">>}
]}.
{[couchdb, io_queue2, reads, count], [
    {type, counter},
    {desc, <<"number of read requests routed through IO queue">>}
]}.
{[couchdb, io_queue2, writes, count], [
    {type, counter},
    {desc, <<"number of write requests routed through IO queue">>}
]}.
{[couchdb, io_queue2, undefined, count], [
    {type, counter},
    {desc, <<"number of requests routed through IO queue without I/O class">>}
]}.
{[couchdb, io_queue2, unknown, count], [
    {type, counter},
    {desc, <<"number of unknown requests routed through IO queue">>}
]}.
{[couchdb, io_queue2, db_update, count], [
    {type, counter},
    {desc, <<"DB update requests routed through IO queue">>}
]}.
{[couchdb, io_queue2, db_compact, count], [
    {type, counter},
    {desc, <<"DB compaction requests routed through IO queue">>}
]}.
{[couchdb, io_queue2, view_compact, count], [
    {type, counter},
    {desc, <<"view compaction requests routed through IO queue">>}
]}.
{[couchdb, io_queue2, view_update, count], [
    {type, counter},
    {desc, <<"view indexing requests routed through IO queue">>}
]}.
{[couchdb, io_queue2, interactive, count], [
    {type, counter},
    {desc, <<"IO directly triggered by client requests">>}
]}.
{[couchdb, io_queue2, db_meta, count], [
    {type, counter},
    {desc, <<"IO related to db_meta">>}
]}.
{[couchdb, io_queue2, internal_repl, count], [
    {type, counter},
    {desc, <<"IO related to internal replication">>}
]}.
{[couchdb, io_queue2, other, count], [
    {type, counter},
    {desc, <<"IO related to internal replication">>}
]}.

{[couchdb, io_queue2, bypassed_count], [
    {type, counter},
    {desc, <<"number of requests that bypassed IO queue">>}
]}.
{[couchdb, io_queue2, reads, bypassed_count], [
    {type, counter},
    {desc, <<"number of read requests that bypassed IO queue">>}
]}.
{[couchdb, io_queue2, writes, bypassed_count], [
    {type, counter},
    {desc, <<"number of write requests that bypassed IO queue">>}
]}.
{[couchdb, io_queue2, unknown, bypassed_count], [
    {type, counter},
    {desc, <<"number of unknown requests that bypassed IO queue">>}
]}.

{[couchdb, io_queue2, reads, queued], [
    {type, counter},
    {desc, <<"number of read requests queued into IO queue">>}
]}.
{[couchdb, io_queue2, writes, queued], [
    {type, counter},
    {desc, <<"number of write requests queued into IO queue">>}
]}.
{[couchdb, io_queue2, unknown, queued], [
    {type, counter},
    {desc, <<"number of unknown requests queued into IO queue">>}
]}.
{[couchdb, io_queue2, queued], [
    {type, counter},
    {desc, <<"number of requests queued into IO">>}
]}.
{[couchdb, io_queue2, search], [
    {type, counter},
    {desc, <<"number of search requests">>}
]}.